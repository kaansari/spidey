scalar Time

type Account {
  id: String!
  name: String!
  orders: [Order!]!
  email: String
  photoURL: String
  mobilePhone: String
  type: String
  locations: [Location!]!
  emailVerified: Boolean
  isActive: Boolean
  createdAt: Time!


}

type Location{
    id: String!
    name: String!
    googleAccountId: String
    googleLocationId: String
    placeId:String
    storeCode:String
    description:String
    address:String
    zipCode:String
    phone:String
    websiteURL:String
    photoURL: String
    category: [Category!]!
    coordinates: [Float!]!
    businessAccount: String
    isVerified:Boolean
    isPublished:Boolean
    isActive:Boolean
  }

type Category{
  id:String!
  name:String!

}

type Product {
  id: String!
  name: String!
  description: String!
  price: Float!
}

type Order {
  id: String!
  createdAt: Time!
  totalPrice: Float!
  products: [OrderedProduct!]!
}

type OrderedProduct {
  id: String!
  name: String!
  description: String!
  price: Float!
  quantity: Int!
}

input PaginationInput {
  skip: Int
  take: Int
}

input AccountInput {
  name: String!
  email: String!
  mobilePhone: String
}

input ProductInput {
  name: String!
  description: String!
  price: Float!
}

input OrderProductInput {
  id: String!
  quantity: Int!
}

input OrderInput {
  accountId: String!
  products: [OrderProductInput!]!
}

type Mutation {
  createAccount(account: AccountInput!): Account
  createProduct(product: ProductInput!): Product
  createOrder(order: OrderInput!): Order
}

type Query {
  accounts(pagination: PaginationInput, id: String): [Account!]!
  products(pagination: PaginationInput, query: String, id: String): [Product!]!
}
